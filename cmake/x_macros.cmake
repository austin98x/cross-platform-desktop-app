macro(_args_system_filter _filtered_args_ref)
	set(${_filtered_args_ref})
	_impl_args_system_filter(${_filtered_args_ref} ${ARGN})
endmacro()

macro(_impl_args_system_filter _filtered_args_ref)
	set(_argn ${ARGN})
	set(_a)
	while(NOT "!${_argn}" STREQUAL "!")
		_token_list_element(_argn 0 _a)
		if(_a MATCHES "(^WIN$|^LINUX$)")
			list(GET _argn 0 _b)
			if("!${_b}" STREQUAL "!(")
				list(REMOVE_AT _argn 0)
				if(OS_${_a})
					_impl_args_system_filter(${_filtered_args_ref} ${_argn})
				else()
					_del_args()
				endif()
			else()
				list(APPEND ${_filtered_args_ref} "${_a}")
			endif()
		elseif("!${_a}" STREQUAL "!)")
			break()
		else()
			list(APPEND ${_filtered_args_ref} "${_a}")
		endif()
	endwhile()
endmacro()

macro(_token_list_element _tle_list_ref _tle_list_index _tle_element_ref)
	list(GET ${_tle_list_ref} ${_tle_list_index} ${_tle_element_ref})
	list(REMOVE_AT ${_tle_list_ref} ${_tle_list_index})
endmacro()

macro(_del_args)
	_token_list_element(_argn 0 _a)
	while(NOT "!${_a}" STREQUAL "!)")
		if("!${_a}" STREQUAL "!(")
			_del_args()
		endif()
		_token_list_element(_argn 0 _a)
	endwhile()
endmacro()

macro(_uncache_vars)
	foreach(_v_ref ${ARGN})
		get_property(${_v_ref}_CACHE_TYPE CACHE ${_v_ref} PROPERTY TYPE)
		if(NOT ${_v_ref}_CACHE_TYPE)
			message(FATAL_ERROR "Cache entry: ${_v_ref} not exists.")
		endif()
		get_property(${_v_ref}_CACHE_HELPSTRING CACHE ${_v_ref} PROPERTY HELPSTRING)
		get_property(${_v_ref}_CACHE_ADVANCED CACHE ${_v_ref} PROPERTY ADVANCED)
		set(_tmp ${${_v_ref}})
		unset(${_v_ref} CACHE)
		set(${_v_ref} ${_tmp})
		list(APPEND _UNCACHED_VARIANTS_LIST ${_v_ref})
	endforeach()
endmacro()

macro(_recache_vars)
	foreach(_v_ref ${_UNCACHED_VARIANTS_LIST})
		set(${s_v_ref} ${${_v_ref}} CACHE ${${_v_ref}_CACHE_TYPE} ${${_v_ref}_CACHE_HELPSTRING})
		if(${_v_ref}_CACHE_ADVANCED)
			mark_as_advanced(${_v_ref})
		endif()
	endforeach()
endmacro()