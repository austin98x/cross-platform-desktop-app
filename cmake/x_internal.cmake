include(CMakeParseArguments)
include("${X_CMAKE_DIR}/x_macros.cmake")

macro(_x_get_cur_pkg_main_output)
	if("${X_CURRENT_PACKAGE_TYPE}!" STREQUAL "SHARED!")
		set(_filename "${CMAKE_SHARED_LIBRARY_PREFIX}${X_CURRENT_PACKAGE_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}")
		set(X_CURRENT_PACKAGE_FULLPATH "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${_filename}")
	elseif("${X_CURRENT_PACKAGE_TYPE}!" STREQUAL "MODULE!")
		set(_filename "${CMAKE_SHARED_MODULE_PREFIX}${X_CURRENT_PACKAGE_NAME}${CMAKE_SHARED_MODULE_SUFFIX}")
		set(X_CURRENT_PACKAGE_FULLPATH "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${_filename}")
	elseif("${X_CURRENT_PACKAGE_TYPE}!" STREQUAL "EXECUTABLE!" 
			OR "${X_CURRENT_PACKAGE_TYPE}!" STREQUAL "CONSOLE!")
		set(X_CURRENT_PACKAGE_FULLPATH "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${X_CURRENT_PACKAGE_NAME}${CMAKE_EXECUTABLE_SUFFIX}")
	endif()
	
	get_filename_component(X_CURRENT_PACKAGE_SUFFIX "${X_CURRENT_PACKAGE_FULLPATH}" EXT)
	get_filename_component(X_CURRENT_PACKAGE_FILENAME "${X_CURRENT_PACKAGE_FULLPATH}" NAME)
endmacro()

macro(_verity_pkg_name)
	#TODO
endmacro()
